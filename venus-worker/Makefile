export GIT_COMMIT=git.$(subst -,.,$(shell git describe --always --match=NeVeRmAtCh --dirty 2>/dev/null || git rev-parse --short HEAD 2>/dev/null))
export RUSTFLAGS

unexport FFI_USE_CUDA
unexport VENUS_WORKER_FEATURES

ifdef FFI_USE_CUDA
	VENUS_WORKER_FEATURES+=cuda
endif

ifneq ($(strip $(VENUS_WORKER_FEATURES)),)
	VENUS_WORKER_FEATURE_FLAGS+=--features="$(strip $(VENUS_WORKER_FEATURES))"
endif

all: fmt clippy build-all

check-all: check-fmt check-clippy

build-all:
	cargo build --release --workspace $(VENUS_WORKER_FEATURE_FLAGS)

test-all:
	cargo test --release --workspace -- --nocapture

fmt:
	cargo fmt --all

check-fmt:
	cargo fmt --all -- --check

clippy:
	cargo clippy --release --fix --no-deps --workspace --tests

check-clippy:
	cargo clippy --release --no-deps --workspace --tests -- -D warnings
	# avoid missing checks like #![deny(missing_docs)]
	cargo clippy --release --no-deps --workspace -- -D warnings

dev-env:
	rustup component add --toolchain $(shell cat rust-toolchain) rls rust-analysis rust-src rustc-dev clippy rustfmt

publish-vc-processors:
	cargo publish -p vc-processors --features="builtin ext-producer"

upgrade-filecoin-proofs:
	cargo update -p filecoin-proofs
	cargo update -p storage-proofs-core
	cargo update -p storage-proofs-porep
	cargo update -p storage-proofs-post
	cargo update -p storage-proofs-update
	cargo update -p filecoin-proofs-api
